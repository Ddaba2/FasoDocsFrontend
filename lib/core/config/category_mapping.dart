// ========================================================================================
// CATEGORY MAPPING - Mapping des cat√©gories de la base de donn√©es vers les UI
// ========================================================================================

import 'package:flutter/material.dart';

class CategoryMapping {
  /// Obtient l'ic√¥ne correspondant au nom de la cat√©gorie
  static IconData getIcon(String categoryName) {
    final lowerName = categoryName.toLowerCase();
    
    print('üîç Recherche ic√¥ne pour: "$categoryName" (lowercase: "$lowerName")');
    
    // Cat√©gories bas√©es sur la table "categories" de la base de donn√©es
    switch (lowerName) {
      case 'identit√© et citoyennet√©':
        print('‚úÖ Ic√¥ne trouv√©e: perm_identity');
        return Icons.perm_identity;
      case 'cr√©ation d\'entreprise':
        print('‚úÖ Ic√¥ne trouv√©e: business_center');
        return Icons.business_center;
      case 'documents auto':
        print('‚úÖ Ic√¥ne trouv√©e: directions_car');
        return Icons.directions_car;
      case 'service fonciers':
        print('‚úÖ Ic√¥ne trouv√©e: construction');
        return Icons.construction;
      case 'eau et √©lectricit√©':
        print('‚úÖ Ic√¥ne trouv√©e: bolt');
        return Icons.bolt;
      case 'justice':
        print('‚úÖ Ic√¥ne trouv√©e: balance');
        return Icons.balance;
      case 'imp√¥t et douane':
        print('‚úÖ Ic√¥ne trouv√©e: account_balance');
        return Icons.account_balance;
      default:
        print('‚ö†Ô∏è Ic√¥ne par d√©faut utilis√©e (category)');
        return Icons.category; // Ic√¥ne par d√©faut
    }
  }
  
  /// Obtient les couleurs correspondant au nom de la cat√©gorie
  static Map<String, Color> getColors(String categoryName, int index) {
    final lowerName = categoryName.toLowerCase();
    
    // Palette de couleurs pour chaque cat√©gorie
    Map<String, Map<String, Color>> categoryColors = {
      'identit√© et citoyennet√©': {
        'backgroundColor': const Color(0xFFE8F5E8),
        'iconColor': const Color(0xFF4CAF50),
      },
      'cr√©ation d\'entreprise': {
        'backgroundColor': const Color(0xFFFFF9C4),
        'iconColor': const Color(0xFFFFB300),
      },
      'documents auto': {
        'backgroundColor': const Color(0xFFFFEBEE),
        'iconColor': const Color(0xFFE91E63),
      },
      'service fonciers': {
        'backgroundColor': const Color(0xFFE8F5E8),
        'iconColor': const Color(0xFF4CAF50),
      },
      'eau et √©lectricit√©': {
        'backgroundColor': const Color(0xFFFFF9C4),
        'iconColor': const Color(0xFFFFB300),
      },
      'justice': {
        'backgroundColor': const Color(0xFFFFEBEE),
        'iconColor': const Color(0xFF424242),
      },
      'imp√¥t et douane': {
        'backgroundColor': const Color(0xFFE3F2FD),
        'iconColor': const Color(0xFF2196F3),
      },
    };
    
    // Retourner les couleurs sp√©cifiques ou par d√©faut
    return categoryColors[lowerName] ?? _getDefaultColors(index);
  }
  
  /// Couleurs par d√©faut selon l'index
  static Map<String, Color> _getDefaultColors(int index) {
    final colors = [
      {'backgroundColor': const Color(0xFFE8F5E8), 'iconColor': const Color(0xFF4CAF50)},
      {'backgroundColor': const Color(0xFFFFF9C4), 'iconColor': const Color(0xFFFFB300)},
      {'backgroundColor': const Color(0xFFFFEBEE), 'iconColor': const Color(0xFFE91E63)},
      {'backgroundColor': const Color(0xFFE8F5E8), 'iconColor': const Color(0xFF4CAF50)},
      {'backgroundColor': const Color(0xFFFFF9C4), 'iconColor': const Color(0xFFFFB300)},
      {'backgroundColor': const Color(0xFFFFEBEE), 'iconColor': const Color(0xFF424242)},
      {'backgroundColor': const Color(0xFFE3F2FD), 'iconColor': const Color(0xFF2196F3)},
    ];
    return colors[index % colors.length];
  }
  
  /// Liste des cat√©gories attendues de la base de donn√©es
  static const List<String> expectedCategories = [
    'Identit√© et citoyennet√©',
    'Cr√©ation d\'entreprise',
    'Documents auto',
    'Service fonciers',
    'Eau et √©lectricit√©',
    'Justice',
    'Imp√¥t et Douane',
  ];
}

